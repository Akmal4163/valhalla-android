name: Build Valhalla for Android

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'  # Specify the distribution

      - name: Install Android SDK and NDK
        run: |
          # Install required packages
          sudo apt-get update
          sudo apt-get install -y wget unzip

          # Download command line tools
          SDK_TOOLS_VERSION=8512546
          wget https://dl.google.com/android/repository/commandlinetools-linux-${SDK_TOOLS_VERSION}_latest.zip
          mkdir -p $HOME/Android/cmdline-tools
          unzip commandlinetools-linux-${SDK_TOOLS_VERSION}_latest.zip -d $HOME/Android/cmdline-tools
          rm commandlinetools-linux-${SDK_TOOLS_VERSION}_latest.zip

          # Move the tools into the correct location
          mv $HOME/Android/cmdline-tools/cmdline-tools $HOME/Android/cmdline-tools/latest

          # Set up environment variables
          echo "ANDROID_SDK=$HOME/Android" >> $GITHUB_ENV
          echo "ANDROID_HOME=$ANDROID_SDK" >> $GITHUB_ENV
          echo "NDK_VERSION=25.2.9519653" >> $GITHUB_ENV

          # Install SDK and NDK using sdkmanager
          yes | $HOME/Android/cmdline-tools/latest/bin/sdkmanager --sdk_root=$ANDROID_SDK "platform-tools" "platforms;android-33" "ndk;25.2.9519653"

      - name: Set up environment variables
        run: |
          echo "NDK=$ANDROID_SDK/ndk/25.2.9519653" >> $GITHUB_ENV
          echo "VALHALLA_DIR=$GITHUB_WORKSPACE/extProjects/valhalla" >> $GITHUB_ENV

          # Add NDK toolchain to PATH
          echo "PATH=\$PATH:$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin" >> $GITHUB_ENV

      - name: Install required packages
        run: |
          sudo apt-get install -y cmake build-essential wget

      - name: Build Protobuf and Valhalla
        run: |
          # Directory of the script
          DIR="$GITHUB_WORKSPACE"

          # Target settings for arm64-v8a
          TARGET=arm64-v8a-linux-android
          API=28

          # Toolchain binaries (using built-in NDK toolchain)
          export CC=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/clang
          export CXX=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/clang++
          export AR=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
          export AS=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-as
          export LD=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/ld
          export STRIP=$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-strip

          # Flags
          export CFLAGS="-fPIE -fPIC"
          export LDFLAGS="-pie"
          export CXXFLAGS="$CFLAGS"

          # Build directory
          mkdir -p build-android && cd build-android
          export BUILD_DIR=$(pwd)

          # Download and extract protobuf source code
          PROTOBUF_VERSION=3.6.1
          wget https://github.com/protocolbuffers/protobuf/releases/download/v$PROTOBUF_VERSION/protobuf-cpp-$PROTOBUF_VERSION.tar.gz
          tar xvf protobuf-cpp-$PROTOBUF_VERSION.tar.gz
          cd protobuf-$PROTOBUF_VERSION

          # Build protobuf
          ./autogen.sh
          ./configure --prefix=$BUILD_DIR/protobuf-install --host=$TARGET --with-protoc=$BUILD_DIR/protobuf-host/bin/protoc CFLAGS="-fPIC -DGOOGLE_PROTOBUF_NO_RTTI" CXXFLAGS="-fPIC -DGOOGLE_PROTOBUF_NO_RTTI"
          make -j$(nproc)
          make install

          mkdir -p $BUILD_DIR/valhalla && cd $BUILD_DIR/valhalla

          source ./protocenable.sh

          conan install $VALHALLA_DIR
          cmake \
              -DCMAKE_BUILD_TYPE=Release \
              -DENABLE_TOOLS=Off \
              -DENABLE_DATA_TOOLS=Off \
              -DENABLE_PYTHON_BINDINGS=Off \
              -DENABLE_NODE_BINDINGS=Off \
              -DENABLE_HTTP=Off \
              -DENABLE_SERVICES=Off \
              -DANDROID_ABI=arm64-v8a \
              -DANDROID_PLATFORM=android-$API \
              -DProtobuf_INCLUDE_DIR=$BUILD_DIR/protobuf-install/include \
              -DProtobuf_LIBRARY=$BUILD_DIR/protobuf-install/lib/libprotobuf.a \
              -DProtobuf_PROTOC_EXECUTABLE=$BUILD_DIR/protobuf-install/bin/protoc \
              -DCMAKE_TOOLCHAIN_FILE=$NDK/build/cmake/android.toolchain.cmake \
              -DBoost_NO_BOOST_CMAKE=ON \
              -DBOOST_ROOT=/usr/include/boost \
              -S $VALHALLA_DIR \
              -B .

          make -j$(nproc)
